.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_grid_grdview_surface.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_grid_grdview_surface.py:


Plotting a surface
------------------

The :meth:`pygmt.Figure.grdview()` method can plot 3-D surfaces with ``surftype="s"``. Here,
we supply the data as an :class:`xarray.DataArray` with the coordinate vectors ``x`` and
``y`` defined. Note that the ``perspective`` argument here controls the azimuth and
elevation angle of the view. We provide a list of two arguments to ``frame`` — the
second argument, prepended with ``"z"``, specifies the :math:`z`-axis frame attributes.
Specifying the same scale for the ``projection`` and ``zcale`` arguments ensures equal
axis scaling. The ``shading`` argument specifies illumination; here we choose an azimuth of
45° with ``shading="+a45"``.



.. image:: /gallery/grid/images/sphx_glr_grdview_surface_001.png
    :alt: grdview surface
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>





|


.. code-block:: default


    import pygmt
    import numpy as np
    import xarray as xr


    # Define an interesting function of two variables, see:
    # https://en.wikipedia.org/wiki/Ackley_function
    def ackley(x, y):
        return (
            -20 * np.exp(-0.2 * np.sqrt(0.5 * (x ** 2 + y ** 2)))
            - np.exp(0.5 * (np.cos(2 * np.pi * x) + np.cos(2 * np.pi * y)))
            + np.exp(1)
            + 20
        )


    # Create gridded data
    INC = 0.05
    x = np.arange(-5, 5 + INC, INC)
    y = np.arange(-5, 5 + INC, INC)
    data = xr.DataArray(ackley(*np.meshgrid(x, y)), coords=(x, y))

    fig = pygmt.Figure()

    # Plot grid as a 3-D surface
    SCALE = 0.2  # [inches]
    fig.grdview(
        data,
        frame=["a5f1", "za5f1"],
        projection=f"x{SCALE}i",
        zscale=f"{SCALE}i",
        surftype="s",
        cmap="roma",
        perspective=[135, 30],  # Azimuth southeast (135°), at elevation 30°
        shading="+a45",
    )

    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  5.004 seconds)


.. _sphx_glr_download_gallery_grid_grdview_surface.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: grdview_surface.py <grdview_surface.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: grdview_surface.ipynb <grdview_surface.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
