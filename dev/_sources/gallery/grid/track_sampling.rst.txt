.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_grid_track_sampling.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_gallery_grid_track_sampling.py:


Sampling along tracks
---------------------

The :func:`pygmt.grdtrack` function samples a raster grid's value along specified
points. We will need to input a 2D raster to ``grid`` which can be an
``xarray.DataArray``. The ``points`` parameter can be a ``pandas.DataFrame`` table where
the first two columns are x and y (or longitude and latitude). Note also that there is a
``newcolname`` parameter that will be used to name the new column of values we sampled
from the grid.

Alternatively, we can provide a NetCDF file path to ``grid``. An ASCII file path can
also be accepted for ``points``, but an ``outfile`` parameter will then need to be set
to name the resulting output ASCII file.



.. image:: /gallery/grid/images/sphx_glr_track_sampling_001.png
    :alt: track sampling
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>





|


.. code-block:: default


    import pygmt

    # Load sample grid and point datasets
    grid = pygmt.datasets.load_earth_relief()
    points = pygmt.datasets.load_ocean_ridge_points()
    # Sample the bathymetry along the world's ocean ridges at specified track points
    track = pygmt.grdtrack(points=points, grid=grid, newcolname="bathymetry")

    fig = pygmt.Figure()
    # Plot the earth relief grid on Cylindrical Stereographic projection, masking land areas
    fig.basemap(region="g", frame=True, projection="Cyl_stere/150/-20/8i")
    fig.grdimage(grid=grid, cmap="gray")
    fig.coast(land="#666666")
    # Plot using circles (c) of 0.15cm, the sampled bathymetry points
    # Points are colored using elevation values (normalized for visual purposes)
    fig.plot(
        x=track.longitude,
        y=track.latitude,
        style="c0.15c",
        cmap="terra",
        color=(track.bathymetry - track.bathymetry.mean()) / track.bathymetry.std(),
    )
    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  1.145 seconds)


.. _sphx_glr_download_gallery_grid_track_sampling.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: track_sampling.py <track_sampling.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: track_sampling.ipynb <track_sampling.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
