.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_projections_conic_conic_equidistant.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_projections_conic_conic_equidistant.py:


Equidistant conic
=================

``Dlon0/lat0/lat1/lat2/width``: Give projection center ``lon0/lat0``, two standard
parallels ``lat1/lat2``, and the map width.



.. image:: /projections/conic/images/sphx_glr_conic_equidistant_001.png
    :alt: conic equidistant
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <IPython.core.display.Image object>





|


.. code-block:: default

    import pygmt

    fig = pygmt.Figure()
    fig.coast(
        shorelines="1/0.5p",
        region=[-88, -70, 18, 24],
        projection="D-79/21/19/23/12c",
        land="lightgreen",
        water="lightblue",
        frame="afg",
    )

    fig.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.495 seconds)


.. _sphx_glr_download_projections_conic_conic_equidistant.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: conic_equidistant.py <conic_equidistant.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: conic_equidistant.ipynb <conic_equidistant.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
